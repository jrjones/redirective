name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    # Grant the GITHUB_TOKEN permission to report security events (required by audit-check)
    permissions:
      contents: read
      security-events: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: rustfmt check
        run: cargo fmt -- --check
      - name: clippy check
        run: cargo clippy --all-targets -- -D warnings
      - name: run tests
        run: cargo test -- --nocapture
      - name: audit dependencies
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: build release
        run: cargo build --release
      - name: Install deploy key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LINKS_DEPLOY_KEY_B64 }}" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Clone links repo via SSH
        run: |
          git clone git@github.com:jrjones/redirective-links.git links
      - name: Copy links.yaml into workspace
        run: cp links/links.yaml links.yaml
      - name: build Docker image
        run: docker build . --file Dockerfile --tag redirective:latest
      - name: start redirective container
        run: |
          docker run -d --name redirective_test \
            -v ~/.ssh/id_ed25519:/run/secrets/links_deploy_key:ro \
            -p 8080:8080 redirective:latest
      - name: wait for service to start
        run: sleep 5
      - name: healthz smoke-test
        run: |
          status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/healthz)
          if [ "$status" != "200" ]; then echo "healthz returned $status"; exit 1; fi
      - name: redirect smoke-test
        run: |
          status=$(curl -s -o /dev/null -w "%{http_code}" -I http://localhost:8080/foo)
          if [ "$status" != "302" ]; then echo "expected 302 for /foo, got $status"; exit 1; fi
          # Extract the Location header (case-insensitive), strip CR, and normalize trailing slash
          location=$(curl -s -D - http://localhost:8080/foo \
                        | grep -i '^location:' \
                        | awk '{print $2}' \
                        | tr -d '\r')
          got="${location%/}"
          if [ "$got" != "https://example.com" ]; then echo "location mismatch: $location"; exit 1; fi
      - name: stop redirective container
        run: docker stop redirective_test
